#See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.

#Depending on the operating system of the host machines(s) that will build or run the containers, the image specified in the FROM statement may need to be changed.
#For more information, please see https://aka.ms/containercompat

FROM mcr.microsoft.com/dotnet/aspnet:8.0-nanoserver-1809 AS base
WORKDIR /app
EXPOSE 5049
EXPOSE 7040

FROM mcr.microsoft.com/dotnet/sdk:8.0-nanoserver-1809 AS build
# Metadata indicating an image maintainer.
LABEL maintainer="solomiosisante@gmail.com"
ARG BUILD_CONFIGURATION=Release

ENV ASPNETCORE_URLS="http://+" 
ENV ASPNETCORE_HTTP_PORT=5049
ENV ASPNETCORE_HTTPS_PORT=7040
ENV ASPNETCORE_Kestrel__Certificates__Default__Password="P@ssw0rd123" 
ENV ASPNETCORE_Kestrel__Certificates__Default__Path=/src/certs/AccSol.pfx
#ENV PATH="%PATH%;C:\Users\ContainerUser\.dotnet\tools"

WORKDIR /src
COPY ["certs/AccSol.pfx", "certs/"]
COPY ["AccSol.API/AccSol.API.csproj", "AccSol.API/"]
COPY ["AccSol.EF/AccSol.EF.csproj", "AccSol.EF/"]

RUN dotnet restore "./AccSol.API/./AccSol.API.csproj"

COPY . .
WORKDIR "/src/AccSol.API"
RUN dotnet build "./AccSol.API.csproj" -c %BUILD_CONFIGURATION% -o /app/build
RUN dir C:\Users\ContainerUser\.dotnet\tools
RUN setx PATH "%PATH%;C:\Users\ContainerUser\.dotnet\tools;"
RUN echo %PATH%

RUN dotnet tool install --global dotnet-ef
RUN dotnet-ef database update --verbose
#RUN sqlcmd -S sqlserver -U sa -P P@ssw0rd123 -i C:\src\AccSol\AccSol.EF\Data\CreateData.sql
ENTRYPOINT ["dotnet", "AccSol.API.dll"]

<#

FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./AccSol.API.csproj" -c %BUILD_CONFIGURATION% -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .


ENTRYPOINT ["dotnet", "AccSol.API.dll"]

#>