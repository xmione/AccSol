@page "/petty-cash-delete/{id:int}"
@inject ILogger<Index> Logger
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

@using AccSol.EF.Models
@using AccSol.EF.Services

<PageTitle>@Title Petty Cash</PageTitle>

<h1>@Title Petty Cash</h1>
<hr />
<br />
<div class="form-group">
    <h4>Do you want to delete this petty cash?</h4>
    <table class="table">
        <tbody>
            <tr>
                <td>PCF No</td>
                <td>@_pcfNo</td>
            </tr>
            <tr>
                <td>Date</td>
                <td>@_date</td>
            </tr>
            <tr>
                <td>Payee</td>
                <td>@_payee</td>
            </tr>
            <tr>
                <td>Particulars</td>
                <td>@_particulars</td>
            </tr>
            <tr>
                <td>Client</td>
                <td>@_client>.Name</td>
            </tr>
            <tr>
                <td>Project Code</td>
                <td>@_projectCode?.Code</td>
            </tr>
            <tr>
                <td>Amount</td>
                <td>@_amount</td>
            </tr>
            @* <tr>
                <td>Account</td>
                <td>@_coa?.AccountName</td>
            </tr>
            <tr>
                <td>Debit</td>
                <td>@_debit</td>
            </tr>
            <tr>
                <td>Credit</td>
                <td>@_credit</td>
            </tr> *@
        </tbody>
    </table>
</div>
<div class="form-group">
    <input type="submit" value="Delete" @onclick="(async () => await RemovePettyCash(id))" class="btn btn-danger" />
    <input type="submit" value="Cancel" @onclick="(() => Cancel())" class="btn btn-warning" />
</div>
@code {
    [Parameter]
    public int id { get; set; }
    protected string Title = "Delete";
    protected PettyCash pettyCash = new();
    private string? _pcfNo = null;
    private DateTime? _date = null;
    private string? _payee = null;
    private string? _particulars = null;
    private Client? _client = null;
    private ProjectCode? _projectCode = null;
    private decimal? _amount = null;
    private Coa? _coa = null;
    private int _clientId;
    private int _projectCodeId;
    

    [Inject]
    public ICommonService<PettyCash> _service { get; set; }
    public ICommonService<Client> _clientService { get; set; }
    public ICommonService<ProjectCode> _projectCodeService { get; set; }
    public ICommonService<Coa> _coaService { get; set; }


    protected async Task Get()
    {
        Logger.LogInformation("Get() was called to load PettyCash object data.");

        pettyCash = await _service.Get(id);

        _pcfNo = pettyCash?.PCFNo;
        _date = pettyCash?.Date;
        _payee = pettyCash?.Payee;
        _particulars = pettyCash?.Particulars;

        if (pettyCash != null)
        {
            _clientId = pettyCash.ClientId.GetValueOrDefault();
            _client = await _clientService.Get(_clientId);

            _projectCodeId = pettyCash.ProjectCodeId.GetValueOrDefault();
            _projectCode = await _projectCodeService.Get(_projectCodeId);

        }

        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        await Get(); 
    }
    protected async Task RemovePettyCash(int userID)
    {
        await _service.Delete(id);
        ReturnToParent();
    }

    public void Cancel()
    {
        ReturnToParent();
    }
    
    public void ReturnToParent()
    {
        NavigationManager.NavigateTo("/petty-cash-entry");
    }
}
