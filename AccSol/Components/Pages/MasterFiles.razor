@page "/master-files"
@implements IDisposable

@inject NavigationManager NavigationManager

<PageTitle>Master Files</PageTitle>

<h1>Master Files</h1>

<div>
    <AuthorizeView>
        <Authorized>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="coa-master">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Chart of Accounts
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="employee-master">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Employees
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="coa-master">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Clients
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="coa-master">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Project Codes
                </NavLink>
            </div>
        </Authorized>
        <NotAuthorized>
            <div class="nav-item px-3">
                You are not authorized to view this page.
            </div>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
