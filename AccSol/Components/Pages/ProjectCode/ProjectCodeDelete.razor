@page "/project-code-delete/{id:int}"
@inject ILogger<Index> Logger
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

@using AccSol.EF.Models
@using AccSol.EF.Services

<PageTitle>@Title Project Code</PageTitle>

<h1>@Title Project Code</h1>
<hr />
<br />
<div class="form-group">
    <h4>Do you want to delete this project code?</h4>
    <table class="table">
        <tbody>
            <tr>
                <td>Code</td>
                <td>@_code</td>
            </tr>
            <tr>
                <td>Description</td>
                <td>@_description</td>
            </tr>
        </tbody>
    </table>
</div>
<div class="form-group">
    <input type="submit" value="Delete" @onclick="(async () => await RemoveProjectCode(id))" class="btn btn-danger" />
    <input type="submit" value="Cancel" @onclick="(() => Cancel())" class="btn btn-warning" />
</div>
@code {
    [Parameter]
    public int id { get; set; }
    protected string Title = "Delete";
    protected ProjectCode projectCode = new();
    private string? _code = null;
    private string? _description = null;
    private string? _accountName = null;

    [Inject]
    public ICommonService<ProjectCode> _service { get; set; }


    protected async Task Get()
    {
        Logger.LogInformation("Get() was called to load ProjectCode object data.");

        projectCode = await _service.Get(id);

        _code = projectCode?.Code;
        _description = projectCode?.Description;

        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        await Get(); 
    }
    protected async Task RemoveProjectCode(int userID)
    {
        await _service.Delete(id);
        ReturnToParent();
    }

    public void Cancel()
    {
        ReturnToParent();
    }
    
    public void ReturnToParent()
    {
        NavigationManager.NavigateTo("/project-code-master");
    }
}
